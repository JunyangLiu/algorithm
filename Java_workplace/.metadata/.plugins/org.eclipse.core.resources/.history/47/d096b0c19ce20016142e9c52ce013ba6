package tree;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

import org.junit.Test;

public class PreorderTraversal144 {
	List<Integer> list=new ArrayList<>();
	Stack<TreeNode> stack=new Stack<>();
    public List<Integer> preorderTraversal(TreeNode root) {
    	if(root==null){
    			return null;
    	}else{
    		stack.push(root);
    		TreeNode currentNode;
    		while(!stack.isEmpty()){
    			currentNode=stack.pop();
    			list.add(currentNode.val);
    			if(root.right!=null){
    				stack.push(currentNode.right);
    			}
    			if(root.left!=null){
    				stack.push(currentNode.left);
    			}
    		}
    	 	for(Integer i:list){
        		System.out.print(i+" ");
        	}
        	return list;
    	}
   
    }
	   @Test
	   public void test(){
		   Integer[] array={1,2};
	
		   TreeNode root=BinaryTreeHelper.arrayToBinaryTree(array, null);
		   preorderTraversal(root);
	   }  
    
}
